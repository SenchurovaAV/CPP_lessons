0.
Шаблон класса позволяет задать тип объектов внутри класса.Это может понадобиться, если на момент написания программы неизвестно, какого типа будут объекты. Пример шаблона класса:
template <typename T>
class Item {
private :
    T num;
public:
    Item(T num) : num(num)
    {}
    T getNum() {
        return Num;
    }
}

1.
Параметрами шаблона класса могут быть параметры-типы, параметры обычных типов, параметры-шаблоны.
Например:
template <  class Type0 // параметр-тип
            int I, //параметр обыного типа
            template <class> class Type2 //параметр-шаблон
        >

Параметрами шаблона класса могут быть:
Значения целочисленного типа;
Указатели/ссылки.
Значения типов double, float не могут использоваться.

2.
Так как возможно использование использоваине шаблонов в шаблонах, мы можем получить рекурсию, например, для вычисления полинома. Можем вычислить сумму ряда натуральных чисел:
template <int n> int sum() 
{
    return sum<i-1>+1;
};
template <> int sum<0> () 
{
    return 0;
};

int main() 
{
    cout << sum<123>() <<endl;
    return 0;
}

Стоит отметить, что максимальная глубина рекурсии ограничена, и для снятия этого ограничения существует параметр 
$ g++ recursion.cpp -ftemplate-depth=666666666

3.
Количество аргументов ничем не ограничено.

4.
Мы можем задать значение параметра шаблона по умолчанию, добавиви знак = перед значением:
template <typename Name = int, Days = 7> class Job

Важно, что все параметры шаблона, следующие за параметром по умолчанию, будут так же иметь значения по умолчанию.

5.
Специализация шаблонов.
Как и со специализациями шаблонов функций, специализации шаблонов классов дают возможность изменить правила поведения при встрече типа, для которого не подходит общее решение.
Пример специализации:

template <typename Type0> 
class Class
{
    public: 
        int foo();
};
template <typename Type>
int Class<Type>::foo()
{
    return 0;
}

template <>
class Class<long double>
{
    int foo();
};

6.
В функцию можно передать только объект myClass<int> iMc, потому что в аргументе функции должна быть ссылка на класс int.

7.
Можно передать только первый объект, т.к. второй является экземпляром другого шаблона. Второй аргумент у второго объекта отличен от второго аргумента функции.
